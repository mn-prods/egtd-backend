name: Build and publish docker image
'on':
  push:
    branches:
      - main
jobs:
  bruteforce_cleanup:
    runs-on: self-hosted
    steps:
      - run: sudo rm -rf ./*
      - run: sudo rm -rf ./.??*
  checkout:
    runs-on: self-hosted
    needs: [bruteforce_cleanup]
    steps:
      - uses: actions/checkout@v3
  unlock:
    runs-on: self-hosted
    needs: [checkout]
    container:
      image: node:16
    steps:
      # install dependencies
      - run: apt update && apt install -y git-crypt
      #  config git
      - run: git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
      - run: git config --global user.name nonapproved_user
      - run: git config --global user.email nonapproved@corp.com
      # unlock git-crypt'ed files
      - run: git-crypt init
        continue-on-error: true
      - run: echo "${{ secrets.GIT_CRYPT_KEY }}" | base64 -d > .git/git-crypt/keys/default
      - run: git stash
      - run: git-crypt unlock .git/git-crypt/keys/default
  build_deploy:
    runs-on: self-hosted
    needs: [unlock]
    steps:
      - 
        name: Docker login
        uses: docker/login-action@v2
        with:
          registry: registry.gitlab.com
          username: marnec
          password: "${{ secrets.GITLAB_PERSONAL_ACCESS_TOKEN }}"
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: registry.gitlab.com/marnec/${{ github.event.repository.name }}
          file: ./docker/dockerfile.production
          context: ./
      # - run: docker logout registry.gitlab.com
      # - run: docker login --username=marnec --password="${{ secrets.GITLAB_PERSONAL_ACCESS_TOKEN }}" registry.gitlab.com
      # - run: docker build -t registry.gitlab.com/marnec/${{ github.event.repository.name }} -f ./docker/dockerfile.production .
      # - run: docker push registry.gitlab.com/marnec/${{ github.event.repository.name }}
